<?xml version = "1.0" encoding = "UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans     
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/context 
   http://www.springframework.org/schema/context/spring-context-3.0.xsd
   http://www.springframework.org/schema/mvc
   http://www.springframework.org/schema/mvc/spring-mvc.xsd
   http://www.springframework.org/schema/security 
   http://www.springframework.org/schema/security/spring-security.xsd">

	<context:component-scan
		base-package="com.emaunzpa.controller, com.emaunzpa.model" />
	<mvc:annotation-driven />

	<bean id="myProperties"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:computer-database-dbHikariConfig.properties</value>
				<value>classpath:log4j.properties</value>
				<value>classpath:hibernate/hibernate.properties</value>
			</list>
		</property>
	</bean>

	<!-- Beans for model, service, util and driver components -->

	<bean id="computerService"
		class="com.emaunzpa.service.ComputerService" autowire="byName"></bean>

	<bean id="userService" class="com.emaunzpa.service.UserService"
		autowire="byName"></bean>

	<bean id="manufacturerService"
		class="com.emaunzpa.service.ManufacturerService" autowire="byName"></bean>

	<bean id="manufacturerDriver"
		class="com.emaunzpa.db.ManufacturerDriver" autowire="byName"></bean>

	<bean id="computerDriver" class="com.emaunzpa.db.ComputerDriver"
		autowire="byName"></bean>

	<bean id="userDriver" class="com.emaunzpa.db.UserDriver"
		autowire="byName"></bean>

	<bean id="pagination" class="com.emaunzpa.util.Pagination"></bean>

	<bean id="computerSpringValidator"
		class="com.emaunzpa.util.ComputerSpringValidator"></bean>

	<!-- Jdbc Template -->

	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${driverClassName}" />
		<property name="url" value="${jdbcUrl}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
	</bean>

	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Spring mvc -->

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- i18n -->

	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename"
			value="classpath:languages/language" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<mvc:interceptors>
		<bean
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang" />
		</bean>
	</mvc:interceptors>

	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<property name="defaultLocale" value="en" />
	</bean>

	<!-- Hibernate -->

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">

		<property name="mappingLocations">
			<list>
				<value>classpath:hibernate/*.hbm.xml</value>
			</list>
		</property>

		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.emaunzpa.model" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.connection.url">${hibernate.connection.url}</prop>
				<prop key="hibernate.connection.driver_class">${hibernate.connection.driver_class}
				</prop>
				<prop key="hibernate.connection.username">${hibernate.connection.username}</prop>
				<prop key="hibernate.connection.password">${hibernate.connection.password}</prop>
			</props>
		</property>

	</bean>
	
	<!-- Spring security -->

	<security:http use-expressions="true">
		<security:csrf request-matcher-ref="csrfMatcher" />
		<security:intercept-url pattern="/login*" access="isAnonymous()" />
		<security:intercept-url pattern="/" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
		<security:intercept-url pattern="/listComputers*" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
		<security:intercept-url pattern="/addComputer*" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/editComputer*" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/addUser*" access="hasRole('ROLE_ADMIN')" />
		<security:form-login/>
		<security:logout/>
	</security:http>
	
	<bean id="csrfMatcher" class="org.springframework.security.web.util.matcher.OrRequestMatcher">
        <constructor-arg>
            <list value-type="org.springframework.security.web.util.matcher.RequestMatcher">
                <bean class="org.springframework.security.web.util.matcher.AntPathRequestMatcher">
                    <constructor-arg name="pattern" value="/api/**"/>
                    <constructor-arg name="httpMethod" value="DELETE"/>
                </bean>
                <bean class="org.springframework.security.web.util.matcher.AntPathRequestMatcher">
                    <constructor-arg name="pattern" value="/api/**"/>
                    <constructor-arg name="httpMethod" value="PUT"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>

	<security:authentication-manager>
		<security:authentication-provider user-service-ref="userService">
			<security:password-encoder ref="encoder"/>
		</security:authentication-provider>
	</security:authentication-manager>

	<bean id="encoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
	</bean>
	
</beans>